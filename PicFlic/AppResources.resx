<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="p1_aboutApp" xml:space="preserve">
    <value>SOURCE &amp; LICENSE:The maintenance of your pictures over the Free Google Cloud Service nicknamed Picasa would be very easy using the application. This app uses the free picasa api and abides to their normal usages terms &amp; conditions</value>
    <comment>msgBoxShow-aboutPage</comment>
  </data>
  <data name="p1_alreadyPinned" xml:space="preserve">
    <value>PicFlic is already Pinned</value>
  </data>
  <data name="p1_authFailed" xml:space="preserve">
    <value>Authentication failed, please cCheck your Email and Password</value>
    <comment>msgBoxShow-google returned auth failed</comment>
  </data>
  <data name="p1_btn_login" xml:space="preserve">
    <value>Login</value>
    <comment>Login</comment>
  </data>
  <data name="p1_chkBox_remember" xml:space="preserve">
    <value>Remember My Choice</value>
    <comment>Remember my choice</comment>
  </data>
  <data name="p1_flickr_underconstruction_msg" xml:space="preserve">
    <value>Connection with Flickr is under construction...</value>
    <comment>messageBoxShow-flickrSelected</comment>
  </data>
  <data name="p1_txtBlock_connect" xml:space="preserve">
    <value>Connect to...</value>
    <comment>Connect to drive message</comment>
  </data>
  <data name="p1_txtBlock_pwd" xml:space="preserve">
    <value>Password:</value>
    <comment>password</comment>
  </data>
  <data name="p1_txtBlock_tagline" xml:space="preserve">
    <value>***Flick your Pics in cloud***</value>
    <comment>app tagline</comment>
  </data>
  <data name="p1_txtBlock_uname" xml:space="preserve">
    <value>Email:</value>
    <comment>User Name</comment>
  </data>
  <data name="p1_unableToAuth" xml:space="preserve">
    <value>Unable to authrize from google, excetion=</value>
  </data>
  <data name="p1_user_msg_emptyfields" xml:space="preserve">
    <value>Either 'Username' or 'Password' is empty</value>
    <comment>user message  - Either 'Username' or 'Password' is empty</comment>
  </data>
  <data name="p1_user_msg_invalidemail" xml:space="preserve">
    <value>Please enter a valid email address</value>
    <comment>Please enter a valid email address</comment>
  </data>
  <data name="p1_user_msg_login_sucess" xml:space="preserve">
    <value>connected to</value>
    <comment>connected to</comment>
  </data>
  <data name="p1_user_msg_selectdrive" xml:space="preserve">
    <value>Please choose the target drive...</value>
    <comment>choose drive user msg</comment>
  </data>
  <data name="p2_2_txtBlock1" xml:space="preserve">
    <value>Please provide the album info:</value>
  </data>
  <data name="p2_2_txtBlock2" xml:space="preserve">
    <value>Album Name: *</value>
  </data>
  <data name="p2_2_txtBlock3" xml:space="preserve">
    <value>Description (Optional):</value>
  </data>
  <data name="p2_2_txtBlock_Private" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="p2_2_txtBlock_Public" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="p2_2_txtBlock_Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="p2_2_txtBlock_Title" xml:space="preserve">
    <value>PicFlic&gt;New Album Form</value>
  </data>
  <data name="p2_AlbumList_NullReturned" xml:space="preserve">
    <value>Cannot get albums data from Picasa server - null returned!</value>
    <comment>msgBoxShow-no album data null returned</comment>
  </data>
  <data name="p2_CreateNewAlbumMenu" xml:space="preserve">
    <value>Create New Album</value>
    <comment>Menu-newAlbum</comment>
  </data>
  <data name="p2_KeyNotFoundError" xml:space="preserve">
    <value>No Albums Found or Cannot load images from Picasa Server</value>
  </data>
  <data name="p2_webException" xml:space="preserve">
    <value>Cannot get albums data from Picasa server - web exception occured!</value>
    <comment>usermasg- web exception</comment>
  </data>
  <data name="p3_imageUploadedSuccess" xml:space="preserve">
    <value>Image Uploaded Successfully!</value>
  </data>
  <data name="p3_KeyNotFoundException" xml:space="preserve">
    <value>No images in the Album</value>
  </data>
  <data name="p3_webexception" xml:space="preserve">
    <value>Cannot load images from Picasa server!</value>
  </data>
  <data name="p4_deletePic" xml:space="preserve">
    <value>DELETE PIC : Are you sure?</value>
  </data>
  <data name="p4_imgDeletedSuccess" xml:space="preserve">
    <value>Image DELETED successfully</value>
  </data>
  <data name="p4_selectAlbumagain" xml:space="preserve">
    <value>Please select an album from previous page</value>
  </data>
  <data name="p1_aboutApp1" xml:space="preserve">
    <value>Main Features:</value>
  </data>
  <data name="p1_aboutApp2" xml:space="preserve">
    <value>-Persistant Login to cloud service</value>
  </data>
  <data name="p1_aboutApp3" xml:space="preserve">
    <value>-Create New Album, Upload new pics</value>
  </data>
  <data name="p1_aboutApp4" xml:space="preserve">
    <value>-Take a pic &amp; upload directly</value>
  </data>
  <data name="p1_aboutApp5" xml:space="preserve">
    <value>-Zoom &amp; pinch single picture view to enjoy HD pics</value>
  </data>
  <data name="p1_aboutApp6" xml:space="preserve">
    <value>-Delete unwanted pics easily while browsing pics</value>
  </data>
</root>